<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lesson 3 | Joseph M. Westenberg</title>
    <link>/courses/rcourse/lesson3/</link>
      <atom:link href="/courses/rcourse/lesson3/index.xml" rel="self" type="application/rss+xml" />
    <description>Lesson 3</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>© Joseph Westenberg 2021</copyright><lastBuildDate>Fri, 05 Feb 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_huc1be9e4e3ae24305730dfe0ccc5f8623_97775_512x512_fill_lanczos_center_2.png</url>
      <title>Lesson 3</title>
      <link>/courses/rcourse/lesson3/</link>
    </image>
    
    <item>
      <title>ggplot</title>
      <link>/courses/rcourse/lesson3/lesson3_01/</link>
      <pubDate>Fri, 05 Feb 2021 00:00:00 +0000</pubDate>
      <guid>/courses/rcourse/lesson3/lesson3_01/</guid>
      <description>


&lt;p&gt;In this lesson we will be plotting the data gathered in previous lessons. ggplot2 is a very popular package for plotting and is now included as part of the tidyverse package. It allows us to make many different kinds of plots and customize them. As it is so popular there are many guides for it. &lt;a href=&#34;https://ggplot2.tidyverse.org/&#34;&gt;Tidyverse’s website&lt;/a&gt; summarizes some very useful resources.&lt;/p&gt;
&lt;p&gt;As ggplot2 has so many options, we will just be barely skimming the surface in this introduction. Let’s start with a minimal command. First let’s load in ggplot2 filter our data down into just Indiana.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)                                     # 1
                                                     # 2
indiana &amp;lt;- county_data %&amp;gt;% filter(State_fips==&amp;quot;18&amp;quot;)  # 3&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data=indiana, aes(x=Year, y=Unemp_rate,   # 1
    colour=County_fips, group=County_fips))+     # 2
  geom_line()                                    # 3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/courses/rcourse/lesson3/lesson3_01_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Line #1: Tells ggplot we will be using the data.frame indiana. aes is short for aesthetics. This is where we tell ggplot how to map our data into the plots. Here I want ggplot to plot Year on the x-axis, Unemp_rate on the y-axis.&lt;/li&gt;
&lt;li&gt;Line #2: A continuation of the aesthetic mapping, his line is saying plot separately for each County_fips separately, giving them a different color.&lt;/li&gt;
&lt;li&gt;Line #3: Tells ggplot to plot the data as lines.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;First thing after this plot, the legend is excessive. Let’s just suppress it for now. To do this we can define the legend.position in theme as none. The theme command allows for a lot of customization with the plot. If you want to see all options &lt;a href=&#34;https://ggplot2.tidyverse.org/reference/theme.html&#34;&gt;click here.&lt;/a&gt; Let’s also change the thickness of the lines, we can do this with the alpha argument.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data=indiana, aes(x=Year, y=Unemp_rate,   # 1
    colour=County_fips, group=County_fips))+     # 2
  geom_line(size=0.3)+                           # 3
  theme(legend.position=&amp;quot;none&amp;quot;)                  # 4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/courses/rcourse/lesson3/lesson3_01_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This already is looking a lot better. But can we do something about the labels on the x axis, they are overlaying on each other. We could make the text smaller but then it would be difficult to see, so let’s just rotate them. Also let’s make the y-axis name a bit more meaningful.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data=indiana, aes(x=Year, y=Unemp_rate,   # 1
    colour=County_fips, group=County_fips))+     # 2
  geom_line(size=0.3)+                           # 3
  theme(legend.position=&amp;quot;none&amp;quot;,                  # 4
    axis.text.x=element_text(angle=45)) +        # 5
  ylab(&amp;#39;Indiana Unemployment Rate by County&amp;#39;)    # 6&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/courses/rcourse/lesson3/lesson3_01_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now we’re getting somewhere! But what if we want to emphasize the county Bloomington is in, Monroe County?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data=indiana, aes(x=Year, y=Unemp_rate,          # 1
    colour=County_fips, group=County_fips))+            # 2
  geom_line(size=0.3)+                                  # 3
  geom_line(data=monroecty, aes(x=Year, y=Unemp_rate,   # 4
    colour=County_fips, group=1),                       # 5
    size=0.6, colour=&amp;#39;black&amp;#39;) +                         # 6
  theme(legend.position=&amp;quot;none&amp;quot;,                         # 7
    axis.text.x=element_text(angle=45)) +               # 8
  ylab(&amp;#39;Indiana Unemployment Rate by County&amp;#39;)           # 9&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/courses/rcourse/lesson3/lesson3_01_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can make the black line for Monroe County ‘pop’ a bit more too. Let’s change the opacity of the other counties lines. To do this we can set a value, alpha. This takes values 0 to 1 where smaller values are more transparent.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data=indiana, aes(x=Year, y=Unemp_rate,          # 1
    colour=County_fips, group=County_fips))+            # 2
  geom_line(size=0.3, alpha=0.5)+                       # 3
  geom_line(data=monroecty, aes(x=Year, y=Unemp_rate,   # 4
    colour=County_fips, group=1),                       # 5
    size=0.6, colour=&amp;#39;black&amp;#39;) +                         # 6
  theme(legend.position=&amp;quot;none&amp;quot;,                         # 7
    axis.text.x=element_text(angle=45)) +               # 8
  ylab(&amp;#39;Indiana Unemployment Rate by County&amp;#39;)           # 9&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/courses/rcourse/lesson3/lesson3_01_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;saving-plots&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Saving Plots&lt;/h3&gt;
&lt;p&gt;Now we have generated a plot we like, let’s save it.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggsave(file=paste0(workingdir, &amp;quot;/figures/indiana_unemp.png&amp;quot;))      # 1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will take the last graphic in memory and save it in the location we specify. We can also tell ggplot to make the plot specific dimensions which I highly recommend doing. If you do not specify dimensions, they can be dependent on the size of your viewer in RStudio.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggsave(file=paste0(workingdir, &amp;quot;/figures/indiana_unemp.png&amp;quot;),   # 1
  height = 5, width = 7)                                        # 2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;scatter-plot-geom_point&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Scatter plot (geom_point)&lt;/h3&gt;
&lt;p&gt;What if we want points to insteaed of lines for each year?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data=indiana, aes(x=Year, y=Unemp_rate,   # 1
  colour=County_fips, group=County_fips))+       # 2
  geom_point()                                   # 3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/courses/rcourse/lesson3/lesson3_01_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
