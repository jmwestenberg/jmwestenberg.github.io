[{"authors":["beverly_mendoza"],"categories":null,"content":"","date":1608681600,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1608681600,"objectID":"0ae9def45a2f5c1a2a1fde25570ee2cf","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"","tags":null,"title":"","type":"authors"},{"authors":["nikita_lopatin"],"categories":null,"content":"","date":1608681600,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1608681600,"objectID":"03813fefea5262dba4cc886c05bf7807","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"","tags":null,"title":"","type":"authors"},{"authors":null,"categories":null,"content":"I am a graduate student studying economics at Indiana University \u0026ndash; Bloomington.\n  Download my curriculum vitae.\n","date":1608681600,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1608681600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I am a graduate student studying economics at Indiana University \u0026ndash; Bloomington.\n  Download my curriculum vitae.","tags":null,"title":"Joseph Westenberg","type":"authors"},{"authors":null,"categories":null,"content":"Special thanks to Dr. Schaffer who was my undergraduate advisor, encouraging me to pursue academic research and graduate education.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2e7f0c2a26b75c39111235cee113dc48","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Special thanks to Dr. Schaffer who was my undergraduate advisor, encouraging me to pursue academic research and graduate education.","tags":null,"title":"David Schaffer","type":"authors"},{"authors":null,"categories":null,"content":"The goal of these short courses are to give graduate students a very prelimenary introduction into coding in R. While having an \u0026lsquo;instructor\u0026rsquo; teach you these things may be helpful, in my belief, coding, like math, you have to learn by doing. So I highly encourage following these notes, but then play around with the code. Change things and see how it changes the output. I think this is the best way to learn.\nOver the next 3 \u0026lsquo;sessions\u0026rsquo; we will be looking into county level unemployment data. The goal will be to learn how to:\n download data straight into R read in data (Rda, csv, xlsx, dta) merge datasets subset datasets create summary statistics and plots run basic regressions  The plan is to do this all while paying particular attention to file pathing and to teach you how to export graphics and tables from R into a form that can be directly into LaTex (so that it can be easily read into paper/presentation documents).\n","date":1577836800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1577836800,"objectID":"169eda860779e00212575fd7adedda62","permalink":"/courses/rcourse/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/courses/rcourse/","section":"courses","summary":"These notes were designed to assist in lectures given at IU-Bloomington for graduate students. The goal of the lectures and notes are to give graduate students a very prelimenary introduction into coding/working with data in R. Lectures given Spring 2021.","tags":null,"title":"Introduction","type":"book"},{"authors":null,"categories":null,"content":"The goal of lesson 0 is to provide a very quick introduction or refresher to R. If this is your first time coding, this brief introduction will most likely be quite insufficient. I encourage you to seek other resources to learn the basics before proceeding.\n","date":1577836800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1577836800,"objectID":"98b9ea72ae42a4b173f613554e549083","permalink":"/courses/rcourse/lesson0/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/courses/rcourse/lesson0/","section":"courses","summary":"The goal of lesson 0 is to provide a very quick introduction or refresher to R. If this is your first time coding, this brief introduction will most likely be quite insufficient.","tags":null,"title":"Lesson 0","type":"book"},{"authors":null,"categories":null,"content":"The goal of lesson 1 is to learn\n Project Organization Writing Loops String Manipulation Downloading/Reading Data Downloading Loop  In this lesson we will be downloading and cleaning data from the BLS on county level employment statistics from 1990-2019.\n","date":1577836800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1577836800,"objectID":"c621b4edbb3f386a81084c63d103a5d2","permalink":"/courses/rcourse/lesson1/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/courses/rcourse/lesson1/","section":"courses","summary":"The goal of lesson 1 is to learn\n Project Organization Writing Loops String Manipulation Downloading/Reading Data Downloading Loop  In this lesson we will be downloading and cleaning data from the BLS on county level employment statistics from 1990-2019.","tags":null,"title":"Lesson 1","type":"book"},{"authors":null,"categories":null,"content":"Instructor: Joseph Westenberg (jwesten@iu.edu)\nOffice Hours: T 1:00 - 3:00 PM (or by appointment) in Wylie Hall 244\nClass: T \u0026amp; Th 4:00 - 5:15 PM in Ballantine Hall 342\nPrerequisites: Intro to Microeconomics (E201) OR Intro to Microeconomics: Honors (S201)\nText: James Gerber\u0026rsquo;s \u0026ldquo;International Economics\u0026rdquo;, Seventh Edition\nCourse Description This course provides a moderately in-depth look at some of the major topics in international economics that are quintessential for the economics major. Namely, we begin with a very brief discussion of the history of international trade and economic integration, as well as the major international organizations that support globalization. Then, we will investigate the work-horse models of trade in economics: the Ricardian model, the Heckscher-Ohlin model, and the New Trade theories. These models formalize our intuition about why countries might trade with each other and how trade might affect each country and the individuals residing in each.\nWe will then spend some time examining the effects of trade policy using the ubiquitous supply-and-demand model, keeping the basic ideas of the previously covered trade models in mind. This includes tariffs, quotas, export subsidies, voluntary export restraints, and a discussion of non-tariff barriers to trade that often come through customs policies or cultural arguments.\nLastly, we will touch on the macro side of international economics. After introducing important definitions, including the current account, capital account, and financial account, we will spend some time discussing exchange rates and their determination.\nCourse Learning Objectives: At the end of the course, students should be able to:\n colloquially describe the gains from trade defend the idea of gains from trade from common criticisms explain how trade can harm some groups within a country explain how tax policy can be used to mitigate harm to those groups harmed by trade describe the costs associated with various trade policies, such as tariffs explain the role of international trade organizations and agreements in trade explain the link between the trade balance and investment flows use purchasing power parity and interest parity conditions to assess currency values  Course Organization Students are expected to come to class prepared. This entails reading any assigned material and completing assigned problems before class. Problems will be collected at the beginning of class before instruction begins. Lectures will compliment and facilitate understanding of the read material. Reading is not a substitute for attending class, nor is coming to class a perfect substitute for reading the material. Assignments and readings will be announced in class and posted on canvas.\nCourse Expectations and Workload My expectations for you in this class are simple, respect your fellow classemates’ learning environments.That is any behavior that disrupts the learning environment is unacceptable.\nYou can expect me to come to class each week prepared. I will work my best to help you understand the material. I will be fair and consistent in the grading of all assessments. My goal is to help every one of you understand economics better.\nWhat I expect of you is to work hard to understand all material. If you do not understand the material after studying it, I have an expectation that you will either ask one of your classmates or myself for help. Your classmates can be a valuable resource to you. This is a 3 credit course, so my expectation is standard that you spend 6 hours outside of class studying the material.\nExams Exams will be either multiple choice, graphical/numerical problems, short essay questions, or a combination of the three. There will be two in-class exams each worth 15% or 75 points of your grade. Those will take place during regular class time on Tuesday, February 11th and Tuesday, March 31st. The final exam is worth 25% or 125 points of your grade and will take place on Tuesday, May 5th from 5:00-7:00PM. If you think that any of your exam questions have been incorrectly graded then you must contact your instructor within 7 days of receiving your exam grade.\nHomeworks There will be 6 homework assignments through the course of the semester. They will consist of multiple choice, short answer, and data related questions. All together the homework will be worth 10% of 50 points of your final grade. The lowest score will be dropped. These will be announced in class and posted on canvas.\nReading Assignments There will be 6 reading assignments, consisting of reading one or two articles from a major news outlet and reflecting on the issues raised about international economics. They are worth 10% or 50 points of your grade. The lowest score will be dropped. All reading assignments will be available on Canvas along with instructions.\nGroup Project There will be a course project, broken into 3-4 parts. Details will be released in upcoming weeks. The project will be worth 15% or 75 points of your grade.\nAttendance and Participation Throughout the semester there will be opportunities to engage with the material during lecture time. Papers from these opportunities will often be collected and used as attendance. There will also be discussions during the class that will give opportunities to participate. Attendance and participation is worth 10% or 50 points of your final grade.\nGrades     Points Percentage     Exam I 75 15%   Exam II 75 15%   Final Exam 125 25%   Homeworks 50 10%   Readings 50 10%   Project 75 15%   Attendance/Participation 50 10%   Total: 500 100%       Grade Percentage     A+ 100-97   A 96-92   A- 91-88   B+ 87-85   B 84-81   B- 80-77   C+ 76-74   C 73-70   C- 69-67   D+ 66-64   D 63-60   D- 59-55   F Below 55    Make up policy Built into the course is an extra reading assignment and an extra homework. These are built in knowing that things arise over the course of the semester. There will also be an exam make-up time for excused absences. These absences must be approved by me 48-hours before the exam time begins. Emergencies will be handled on a case by case basis. Illness or injury, family emergencies, certain University-approved curricular and extra-curricular activities, and religious holidays can be legitimate reasons to miss class or to be excused from a scheduled examination.\nWith regard to family emergencies, you must provide verifiable documentation of the emergency. Given the vast array of family emergencies the instructor will provide precise guidance as to what constitutes adequate documentation. Unless the emergency is critical you should notify the instructor in advance of your absence from the scheduled course event. In cases of critical emergencies, you must notify the instructor within one week of your absence.\nFor University-approved curricular and extra-curricular activities, verifiable documentation is also required. The student should obtain from the unit or department sponsoring the activity a letter (or class absence form) indicating the anticipated absence(s). The letter must be presented to the instructor at least one week prior to the first absence.\nIn the case of religious holidays, the student should notify the instructor by the third week of the course of any potential conflicts.\nAcademic Integrity As a student at IU, you are expected to adhere to the standards and policies detailed in the Code of Student Rights, Responsibilities, and Conduct. When you submit an assignment with your name on it, you are signifying that the work contained therein is yours, unless otherwise cited or referenced. Any ideas or materials taken from another source for either written or oral use must be fully acknowledged. All suspected violations of the Code will be reported to the Dean of Students and handled according to University policies. Sanctions for academic misconduct may include a failing grade on the assignment, reduction in your final course grade, and a failing grade in the course, among other possibilities. If you are unsure about the expectations for completing an assignment or taking a test or exam, be sure to seek clarification beforehand.\nAutomatic Withdrawal The last day to withdraw from the course and receive an automaticWis Sunday, March 15. After this date, withdrawals will only be granted in accordance with University policy. After automatic withdrawal period, withdrawals are only allowed with permission of their dean. These approvals are typically only given for reasons that make it “extremely difficult to drop a class by the Auto-W Deadline or that impede success in a class after the Auto-W deadline.” To qualify for a grade of W after the deadline, a student must be passing the class on the date of withdrawal, if failing, the grade will be an F. More information can be found on the academic advising website.\nAccommodations If you need classroom or testing accommodations for a disability, please contact me outside of class to present the written supporting memorandum of accommodation from the Office of Disability Services for Students. Requests for accommodations for disability must be received and authorized by me in written form no less than two weeks in advance of need, in order to allow adequate time to review and make appropriate arrangements. No accommodation should be assumed until authorized by your instructor.\nImportant Miscellaneous  The best way to reach me is via email or office hours. I have found office hours are typically much more efficient for resolving multiple, or longer questions. I will typically respond to emails within 24 hours of regular business hours. If you have a conflict with my regular office hours and wish to attend, send me an email and we can most likely find another time to meet. Modification of policies may be required during the semester. The instructor will make explicit announcements pertaining to any such changes.  Tentative Topic Outline - Subject to Change  Introduction and Institutions  USA in a Global Economy International Economic Institutions   International Trade  Comparative Advantage and the Gains from Trade Comparative Advantage and Factor Endowments Beyond Comparative Advantage Trade Policy Commercial Policy   International Trade, Labor, and Environmental Standards International Finance  Trade and Balance of Payments Exchange Rates and Exchange Rate Systems    ","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"a495b2a515613164165e55a3fa274eca","permalink":"/courses/interecon/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/courses/interecon/","section":"courses","summary":"This course provides a moderately in-depth look at some of the major topics in international economics. This course covers a brief discussion of the history of international trade and integration, main models in international trade\u0026#58; Ricardian model, Heckscher-Ohlin model, and New Trade theories. We will then use utilize the supply-and-demand model to consider effects of trade policy\u0026#58; tariffs, quotas, export subsidies, and non-tariff barriers. Lastly, we will touch on the macro side of international economics\u0026#58; introducing definitions and discussing exchange rates and their determination.","tags":null,"title":"(Spr 2020) E203: Introduction to International Economics","type":"book"},{"authors":null,"categories":null,"content":"\rI assume you have R installed and running. There are plenty of guides online on how to do this.\nLet’s first define some arrays within R.\nThese can be numeric based, in this case integer.\nA\u0026lt;-c(5,6,7) # 1\rB\u0026lt;-c(7,8,9) # 2\rLet’s dig into what is going on a bit more. We are telling R to define a vector, this is the c( ) part, with elements 1,2,3 and give that vector a name A. The backwards arrow tells R what is the name and what is the element we are defining.\nWe can make character based vectors as well.\nC\u0026lt;-c(\u0026quot;a\u0026quot;, \u0026quot;b\u0026quot;, \u0026quot;c\u0026quot;) # 1\rD\u0026lt;-c(\u0026quot;d\u0026quot;, \u0026quot;e\u0026quot;, \u0026quot;f\u0026quot;) # 2\rWe can then combine these vectors into a dataframe (this is relevant for when we start thinking about reading in/manipulating actual data). Since all of our vectors are length three, we can easily create a dataframe (think a matrix) where our column names will be the name of the vectors, and the rows will be the elements of the vectors.\nfirst_dataframe\u0026lt;-data.frame(A,B,C,D) # 1\rprint(first_dataframe) # 2\r## A B C D\r## 1 5 7 a d\r## 2 6 8 b e\r## 3 7 9 c f\rNow first_dataframe is going to be of similar format as we will typically have when we read in data from excel files into R. We can access certain rows and columns within the dataframe by putting square brackets after the name of the dataframe. For example if we wanted to print the element in the first row and first column, we could define the variable x as this and then print x. (Keep in mind the ordering is rows, columns)\nx\u0026lt;-first_dataframe[1,1] # 1\rprint(x) # 2\r## [1] 5\rWhat if we wanted to print all elements in the first row, we just leave the column (after the comma) blank:\nx\u0026lt;-first_dataframe[1,] # 1\rprint(x) # 2\r## A B C D\r## 1 5 7 a d\rHow about 1st \u0026amp; 3rd row?\nx\u0026lt;-first_dataframe[c(1,3),] # 1\rprint(x) # 2\r## A B C D\r## 1 5 7 a d\r## 3 7 9 c f\rAnother way to do this is to define another variable, say y as a vector with elements 1 and 3. Notice how the below output is the same as the above.\ny\u0026lt;-c(1,3) # 1\rx\u0026lt;-first_dataframe[y,] # 2\rprint(x) # 3\r## A B C D\r## 1 5 7 a d\r## 3 7 9 c f\rWe can do the same thing for the columns (we need to remember the order for the square brackets are rows, columns). Note: if we put a negative sign in front of these commands in the brackets, instead “keeping” certain rows or columns, it means remove! That is if in the below command we have -3, it would be saying REMOVE column 3!\nx\u0026lt;-first_dataframe[,3] # 1\ry\u0026lt;-first_dataframe[,-3] # 2\rprint(x) # 3\r## [1] a b c\r## Levels: a b c\rprint(y) # 1\r## A B D\r## 1 5 7 d\r## 2 6 8 e\r## 3 7 9 f\rOur third column is named C, we can also pull this column by referencing it’s name after a dollar sign, such as:\nx\u0026lt;-first_dataframe$C # 1\rprint(x) # 2\r## [1] a b c\r## Levels: a b c\rThis may not sound useful now, but think if we have many columns of variables, say wage, hoursworked, fulltime, and hundreds of more. We don’t want to have to find what column number hoursworked is, we can just reference this column name.\n","date":1611532800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1611532800,"objectID":"9716c27d9bedd456789944654ffbae13","permalink":"/courses/rcourse/lesson0/lesson0_01/","publishdate":"2021-01-25T00:00:00Z","relpermalink":"/courses/rcourse/lesson0/lesson0_01/","section":"courses","summary":"I assume you have R installed and running. There are plenty of guides online on how to do this.\nLet’s first define some arrays within R.\nThese can be numeric based, in this case integer.","tags":null,"title":"Very Basics","type":"book"},{"authors":null,"categories":null,"content":"\rBefore we get started, let’s set up a folder for our project and create subfolders to keep things organized. For this project I recommend the following subfolders, which are a good minimum for organizing any project:\n\rraw_data: This is where we will put our `preprocessed’ data we will be getting from MIT Election Lab.\rscripts: Where we will save all of our R-scripts in this folder\rprocessed_data: If we want to save some intermediate data steps between raw data and our output.\rtables: Any tex tables we generate we will save to this folder\rfigures: Any figures we generate we will save to this folder\rtex: Where we can have our paper and/or presentations\r\rYou can make more folders if you feel it keeps you organized. The main point I want to make here is it is well worth your time to think about how you want to organize your project. Oftentimes if we jump right in without a plan, things become a jumbled mess. (If you want to go further with your organization strategies, I recommend looking into waf, specifically check out Templates for Reproducible Research Projects in Economics.)\nMy project folder now looks like this:\rNow within R let’s set our working directory to point to the main folder we have. It will be convenient to have this at the top of all of your scripts.\nworkingdir\u0026lt;-\u0026quot;PATH_TO_YOUR_WORKING_DIR\u0026quot; # 1\rsetwd(workingdir) # 2\rThe first line above we are saving the path to our folder as a variable name ‘workingdir’, then we are telling R to be in this folder. That is if we had a data file right within our main folder, we could just simply reference that file without any path and it would open. That’s becaause we are telling R to be living in this folder. Note: this can be changed during your script and R reads your script sequentially, thus you need to make sure that you define your working directory before you are trying to open any files while using these paths. That is why it is always a good idea to start your script with this.\n","date":1611532800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1611532800,"objectID":"241795bd5dd77fae72aed58cd203fc02","permalink":"/courses/rcourse/lesson1/lesson1_01/","publishdate":"2021-01-25T00:00:00Z","relpermalink":"/courses/rcourse/lesson1/lesson1_01/","section":"courses","summary":"Before we get started, let’s set up a folder for our project and create subfolders to keep things organized. For this project I recommend the following subfolders, which are a good minimum for organizing any project:","tags":null,"title":"Project Organization","type":"book"},{"authors":null,"categories":null,"content":"\rWe will be using county level employment/labor force data from BLS. We will be using the Labor force data by county, yearly annual averages. There is data from 1990-2019 (as of writing these notes). To start we are going to download this data and then read it into R.\nWe could download these all one by one, or we could write a simple loop to read them in for us. To do this let’s first look at a very simple loop structure:\nletters\u0026lt;-c(\u0026quot;a\u0026quot;, \u0026quot;b\u0026quot;, \u0026quot;c\u0026quot;, \u0026quot;d\u0026quot;, \u0026quot;e\u0026quot;) # 1\rletters_l\u0026lt;-length(letters) # 2\rfor (i in 1:letters_l){ # 3\rprint(letters[i]) # 4\r} # 5\r## [1] \u0026quot;a\u0026quot;\r## [1] \u0026quot;b\u0026quot;\r## [1] \u0026quot;c\u0026quot;\r## [1] \u0026quot;d\u0026quot;\r## [1] \u0026quot;e\u0026quot;\rGoing line by line:\n\rLine 1: Define a vector of letters.\rLine 2: Report the number of elements in our letter vector and save as letters_l\rLine 3: Defining for loop. Our index will be i, and it will run from 0 to however long letters vector is (try adding some more letters!) Not our for loop action is defined within the curly braces.\rLine 4: For every i defined in Line 3 we want to print the corresponding element in the vector letters.\r\rOkay, great. How does this help us with reading in the data? We’ll get to that in the next section.\n","date":1611532800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1611532800,"objectID":"7c079f27a2d25ffc99566a8ab22fc7b3","permalink":"/courses/rcourse/lesson1/lesson1_02/","publishdate":"2021-01-25T00:00:00Z","relpermalink":"/courses/rcourse/lesson1/lesson1_02/","section":"courses","summary":"We will be using county level employment/labor force data from BLS. We will be using the Labor force data by county, yearly annual averages. There is data from 1990-2019 (as of writing these notes).","tags":null,"title":"Writing Loops","type":"book"},{"authors":null,"categories":null,"content":"\rString Concatenation\ra\u0026lt;-\u0026quot;This is a the start\u0026quot; # 1\rb\u0026lt;-\u0026quot;of a sentence\u0026quot; # 2\rprint(paste0(a,b)) # 3\r## [1] \u0026quot;This is a the startof a sentence\u0026quot;\rprint(paste(a,b)) # 1\r## [1] \u0026quot;This is a the start of a sentence\u0026quot;\rNotice we define a and b as strings. What paste and paste0 do are combine these strings into one string. We can see that paste places a space between the two strings while paste0 does not. paste0 comes in quite handy for working with file pathing as we will see. Yes it’s that easy!\nWe will not be using this for this project but it may be useful to know we can concatenate two vectors of strings as well.\na\u0026lt;-c(\u0026quot;This is a the start\u0026quot;, \u0026quot;Now we have\u0026quot;, \u0026quot;This really is\u0026quot;, \u0026quot;Economics is\u0026quot;) # 1\rb\u0026lt;-c(\u0026quot;of a sentence.\u0026quot;, \u0026quot;another sentence.\u0026quot;, \u0026quot;quite handy.\u0026quot;, \u0026quot;awesome!\u0026quot;) # 2\rprint(paste(a,b)) # 3\r## [1] \u0026quot;This is a the start of a sentence.\u0026quot; \u0026quot;Now we have another sentence.\u0026quot; ## [3] \u0026quot;This really is quite handy.\u0026quot; \u0026quot;Economics is awesome!\u0026quot;\rI don’t want to get into too many details here but R has some very useful functions for dealing with/cleaning strings. I will be writing another post on this in the coming weeks.\n\rString Padding\rConsider an example that will become relevant in coming lessons. We have a vector of numbers which currently runs 1-19. Now what if we need all the ‘single character’ digits to have a leading one. That is instead of “1” we need “01”.\nWe could use paste0 as above and combine a 0 with our vector.\nnumbvec\u0026lt;-as.character(1:19) # 1\rprint(paste0(\u0026quot;0\u0026quot;, numbvec)) # 2\r## [1] \u0026quot;01\u0026quot; \u0026quot;02\u0026quot; \u0026quot;03\u0026quot; \u0026quot;04\u0026quot; \u0026quot;05\u0026quot; \u0026quot;06\u0026quot; \u0026quot;07\u0026quot; \u0026quot;08\u0026quot; \u0026quot;09\u0026quot; \u0026quot;010\u0026quot; \u0026quot;011\u0026quot; \u0026quot;012\u0026quot;\r## [13] \u0026quot;013\u0026quot; \u0026quot;014\u0026quot; \u0026quot;015\u0026quot; \u0026quot;016\u0026quot; \u0026quot;017\u0026quot; \u0026quot;018\u0026quot; \u0026quot;019\u0026quot;\rBut we don’t want a leading 0 in front of the double ‘character’ digits (ie We DON’T want “090”). We could break our vector into single character digits and two character digits, manipulate the single character digits, then combine it back in with the double character digits. But there is an easier way: str_pad !\nrequire(stringr) # 1\r## Loading required package: stringr\rnumbvec\u0026lt;-as.character(1:19) # 1\rprint(str_pad(numbvec, 2, \u0026quot;left\u0026quot;, \u0026quot;0\u0026quot;) ) # 2\r## [1] \u0026quot;01\u0026quot; \u0026quot;02\u0026quot; \u0026quot;03\u0026quot; \u0026quot;04\u0026quot; \u0026quot;05\u0026quot; \u0026quot;06\u0026quot; \u0026quot;07\u0026quot; \u0026quot;08\u0026quot; \u0026quot;09\u0026quot; \u0026quot;10\u0026quot; \u0026quot;11\u0026quot; \u0026quot;12\u0026quot; \u0026quot;13\u0026quot; \u0026quot;14\u0026quot; \u0026quot;15\u0026quot;\r## [16] \u0026quot;16\u0026quot; \u0026quot;17\u0026quot; \u0026quot;18\u0026quot; \u0026quot;19\u0026quot;\rNow this looks like what we want! But what is str_pad doing? With str_pad we are telling stringr we want all elements of numbvec to be of length 2. So stringr checks to see if the elements are less than 2 characters, if an element is it adds “0”’s to the left side until it reaches length 2. If it is already length 2, it will leave it alone.\nThere is many other handy commands to deal with strings in R. These are just a couple of commands we will be using. I will be writing a post with some other handy functions in the coming weeks and will link it here.\n\r","date":1611532800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1611532800,"objectID":"38831f1a16587a0b462446bbaa194692","permalink":"/courses/rcourse/lesson1/lesson1_03/","publishdate":"2021-01-25T00:00:00Z","relpermalink":"/courses/rcourse/lesson1/lesson1_03/","section":"courses","summary":"String Concatenation\ra\u0026lt;-\u0026quot;This is a the start\u0026quot; # 1\rb\u0026lt;-\u0026quot;of a sentence\u0026quot; # 2\rprint(paste0(a,b)) # 3\r## [1] \u0026quot;This is a the startof a sentence\u0026quot;\rprint(paste(a,b)) # 1\r## [1] \u0026quot;This is a the start of a sentence\u0026quot;\rNotice we define a and b as strings.","tags":null,"title":"String Manipulation","type":"book"},{"authors":null,"categories":null,"content":"\rDownloading within R\rWe can use R to with a direct link to download. The first argument the download.file() command takes that we will use is the url of the xslx document and the second argument is the destination it will be saved. The last argument is basically telling R that the excel docs are not plain text. (Don’t forget to have workingdir defined as we did in Lesson 1.1\ndownload.file(\u0026quot;https://www.bls.gov/lau/laucnty90.xlsx\u0026quot;, # 1\rpaste0(workingdir, \u0026quot;/raw_data/\u0026quot;, \u0026quot;bls_unemp_90.xlsx\u0026quot;), mode=\u0026quot;wb\u0026quot;) # 2\r\rReading in Data\rBefore we read in this data to R, let’s see what we are dealing with. Opening up the file in excel we can see there will be issues reading the file in.\rWe can notice that the first row has the file title spread across columns A:J. Variable names are spread across anywhere 1-3 rows. And lastly we have an empty column in F. The bright side is if we observe the other year’s files, they all have this exact same structure. Hence we will able to use a loop eventually to clean them all instead of one at a time.\nThe main package we will be using is readxl, which is quite self explanatory. It is a package meant to help to read in excel docs. Let’s try to open the file for 1990 we downloaded in R. We can do this through R Studio’s functionality.\nWithin the “Environment” area of R Studio, click Import Dataset, then From Excel…\rThere is definitely multiple ways to do this, as we can see from the options available. I first deselect “First Row as Names” (This option is very nice if your data is already in a precleaned form and your first row simply has your variable names.) I then begin to skip rows, 5 rows of skipping leads to the first row being the first row of data.\nNext we can handle column F that we noticed was plank. This is column 6 and stays consistent across all years (you can check this). Remembering our lessons from the Very Basics section we can subset this dataframe by removing column 6.\nHence we have something that will look like the following for our command for our script.\nrequire(readxl) # 1\rworkingdir\u0026lt;-\u0026quot;C:/Users/weste/Documents/GitHub/Rcourse\u0026quot; # 2\rbls_unemp_90 \u0026lt;- read_excel(paste0(workingdir, \u0026quot;/raw_data/bls_unemp_90.xlsx\u0026quot;), col_names=FALSE, skip=5) # 3\rbls_unemp_90\u0026lt;-bls_unemp_90[,-6] # 4\rcol_names(bls_unemp_90)\u0026lt;-c(\u0026quot;LAUS_code\u0026quot;, \u0026quot;State_fips\u0026quot;, \u0026quot;County_fips\u0026quot;, \u0026quot;County_name\u0026quot;, \u0026quot;Year\u0026quot;, \u0026quot;Labor_force\u0026quot;, \u0026quot;Employed\u0026quot;, \u0026quot;Unemployed\u0026quot;, \u0026quot;Unemp_rate\u0026quot;) # 5\rWhere the last line above we are giving our columns names based on the names we saw in the excel document.\n\rDownloading/Reading Data in a Loop\rHere is a good place to pause if you want a challenge. You should have all the tools needed to write a loop to download all files from 1990-2019.\n\r","date":1611532800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1611532800,"objectID":"dea2a4d5e49aee88ed481bd0c9c48077","permalink":"/courses/rcourse/lesson1/lesson1_04/","publishdate":"2021-01-25T00:00:00Z","relpermalink":"/courses/rcourse/lesson1/lesson1_04/","section":"courses","summary":"Downloading within R\rWe can use R to with a direct link to download. The first argument the download.file() command takes that we will use is the url of the xslx document and the second argument is the destination it will be saved.","tags":null,"title":"Downloading/Reading Data","type":"book"},{"authors":null,"categories":null,"content":"\rrequire(stringr) # 1\rrequire(readxl) # 2\rcounty_data\u0026lt;-data.frame() # 3\ryears\u0026lt;-c(90:99, 0:19) # 4\ryears\u0026lt;-str_pad(as.character(years), 2, \u0026quot;left\u0026quot;, \u0026quot;0\u0026quot;) # 5\ryears_l\u0026lt;-length(years) # 6\rfor (i in 1:years_l){ # 7\rurl\u0026lt;-paste0(\u0026quot;https://www.bls.gov/lau/laucnty\u0026quot;, years[i], \u0026quot;.xlsx\u0026quot;) # 8\rdestination\u0026lt;-paste0(workingdir, \u0026quot;/raw_data/bls_unemp_\u0026quot;, years[i], \u0026quot;.xlsx\u0026quot;) # 9\rdownload.file(url, destination, mode=\u0026quot;wb\u0026quot;) # 10\rtemp_df \u0026lt;- read_excel(paste0(workingdir, \u0026quot;/raw_data/bls_unemp_\u0026quot;, years[i], # 11\r\u0026quot;.xlsx\u0026quot;),col_names=FALSE, skip=5) # 12\rtemp_df\u0026lt;-temp_df[,-6] # 13\rcolnames(temp_df)\u0026lt;-c(\u0026quot;LAUS_code\u0026quot;, \u0026quot;State_fips\u0026quot;, \u0026quot;County_fips\u0026quot;, \u0026quot;County_name\u0026quot;, # 14\r\u0026quot;Year\u0026quot;, \u0026quot;Labor_force\u0026quot;, \u0026quot;Employed\u0026quot;, \u0026quot;Unemployed\u0026quot;, \u0026quot;Unemp_rate\u0026quot;) # 15\rcounty_data\u0026lt;-rbind(county_data, temp_df) # 16\r} # 17\rsave(county_data, file=paste0(workingdir, \u0026quot;/processed_data/county_data_all\u0026quot;)) # 18\rFirst let’s think what we are trying to achieve. The links for the downloads are all in the form of https://www.bls.gov/lau/laucntyZZ.xlsx, where ZZ is two digits representing the year. These ZZ values run from “90”to “99” for years 1990-1999 and “00” to “19” for years 2000-2019.\nLet’s work through the above code line by line:\n\rLines #1 \u0026amp; #2: load required packages.\rLine #3: Declare county_data will be a data.frame. Right now it is empty, but we will add to it.\rLine #4: Define a vector with elements 90-99 and 0-19. (Which will correspond to the years that we will pull)\rLine #5 : We have a vector for years, however if we notice in the url names we need this vector to include a leading 0 in front of the single ‘character’ digits (ie “01” instead of “1”). But we don’t want a leading 0 in front of the double ‘character’ digits (ie We DON’T want “090”). Go back to the String Manipulation section if you need to refresh on this.\rLine #6 : Calculate the length of years and save as years_l\rLine #7 : See String Manipulation if defining the for loop does not make sense.\rLine #8 : We are creating the character string for the url for the download link. Since they all take the form of https://www.bls.gov/lau/laucntyZZ.xlsx, we can use one element of our years vector at a time. (See String Manipulation for explanation on paste0)\rLine #9 : This is of similar spirit to line #4, but this is defining the path/filename of the excel file we will save.\rLine #10 : This line is just telling R to download the file at that url, save it to the defined location/name, and to read it as a non-raw text form. (see Downloading/Reading Data if unclear.)\rLines #11-#15: See Downloading/Reading Data for a direct explanation.\rLine #16: rbind appends data. Hence since all of our data has the same format and has a variable indicating the year, we can simply append.\rLine #18: save the combined data to our processed_data folder as a Rda type.\r\rWe now have our data cleaned and saved for our next lesson when we will start to work with it more!\n","date":1611532800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1611532800,"objectID":"3dde3b56043ffb694caaa344577e110c","permalink":"/courses/rcourse/lesson1/lesson1_05/","publishdate":"2021-01-25T00:00:00Z","relpermalink":"/courses/rcourse/lesson1/lesson1_05/","section":"courses","summary":"require(stringr) # 1\rrequire(readxl) # 2\rcounty_data\u0026lt;-data.frame() # 3\ryears\u0026lt;-c(90:99, 0:19) # 4\ryears\u0026lt;-str_pad(as.character(years), 2, \u0026quot;left\u0026quot;, \u0026quot;0\u0026quot;) # 5\ryears_l\u0026lt;-length(years) # 6\rfor (i in 1:years_l){ # 7\rurl\u0026lt;-paste0(\u0026quot;https://www.bls.gov/lau/laucnty\u0026quot;, years[i], \u0026quot;.","tags":null,"title":"Download Loop","type":"book"},{"authors":["Joseph Westenberg","",""],"categories":null,"content":"\rSubmitted on 12/23/2020.\n","date":1608681600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1608681600,"objectID":"45328c9474b917dbcf9111b81afaa469","permalink":"/project/sect_301/","publishdate":"2020-12-23T00:00:00Z","relpermalink":"/project/sect_301/","section":"project","summary":"Submitted","tags":["Political Economy","International Trade","Section 301"],"title":"Section 301 and Politics: Analysis of Tariff Exemptions","type":"project"},{"authors":[],"categories":[],"content":"\r\r\r\rThis post assumes a basic knowledge of R.\nUsing leaflet we can map shapefiles and specific points. As an illustrative example I will be using code I wrote earlier this year when I was\rlooking into some political economy questions regarding schools and state government.\rThe shapefiles I will be using are the lower and upper legislatures for the state of\rWisconsin. The points I will be mapping in the second post of this series will be specific\rschool locations.\nThe goal of this post is to explain how to make an interactive map as below.\rThis map allows user interaction: zooming in and out, clicking on areas\rto show details of that area, removing or adding of layers (top right corner).\n\r{\"x\":{\"url\":\"/post/2020-05-01-mapping-with-leaflet_files/figure-html//widgets/widget_unnamed-chunk-3.html\",\"options\":{\"xdomain\":\"*\",\"allowfullscreen\":false,\"lazyload\":false}},\"evals\":[],\"jsHooks\":[]}\rThe main libraries we will be using are tigris\rand leaflet.\rLet’s start by loading these packages and then downloading the lower and upper legislative\rdistrict shapefiles via tigris.\nlibrary(tigris) # 1\rlibrary(leaflet) # 2\rWiscoCdUpper\u0026lt;-state_legislative_districts(state=\u0026quot;WI\u0026quot;, house = \u0026quot;upper\u0026quot;, # 3\ryear=2013, cb=TRUE) # 4\rWiscoCdLower\u0026lt;-state_legislative_districts(state=\u0026quot;WI\u0026quot;, house = \u0026quot;lower\u0026quot;, # 5\ryear=2013, cb=TRUE) # 6\rcenterLNG\u0026lt;--90 # 7\rcenterLAT\u0026lt;-44.8 # 8\rThe arguments arguments are fairly self explanatory:\n\rstate: the state that you want to retrieve shapefiles for. Accepts State FIPS or state abbreviation.\rhouse: indicates which legislative districts you want. Takes lower or upper as an argument\ryear: the districts that were active in this year\rcb: an argument for adjusting level of detail. FALSE is default and is the high detail map. TRUE returns a less detailed map.\r\rThe variables centerLNG and centerLAT are longitude and latitude coordinate that I will be using to center my map around.\nThe interactive mapping package I use is leaflet, it will allow us to layer different shapefiles\rover a base map.\nI first want to store this information that will be popping up to a vector to feed into leaflet’s\rcommand. Now within our spatial polygon data frame, we can access the ID of each shape. these\rtake the form of SSDDD where SS is a two digit state FIPS code, and DDD is a 3 digit district\rnumber.\ndistrictinfo \u0026lt;- paste0(\u0026quot;Lower District: \u0026quot;, substr(WiscoCdLower$GEOID, 3, 5)) # 1\rmapcolors\u0026lt;-rainbow(length(WiscoCdLower@data$GEOID)) # 2\rrnum\u0026lt;-sample(nrow(WiscoCdLower@data)) # 3\rpal \u0026lt;- colorFactor(mapcolors[rnum], WiscoCdLower@data$GEOID) # 4\rlowermap\u0026lt;-leaflet(options = leafletOptions(minZoom = 4)) %\u0026gt;% # 5\raddProviderTiles(\u0026quot;CartoDB.Positron\u0026quot;, group = \u0026quot;base\u0026quot;) %\u0026gt;% # 6\rsetView(centerLNG, centerLAT, zoom = 6) %\u0026gt;% # 7\rsetMaxBounds(-94, 41, -85, 48) %\u0026gt;% # 8\raddPolygons(data = WiscoCdLower, color = \u0026quot;white\u0026quot;, weight = 2, # 9\rfillColor = ~pal(GEOID), fillOpacity = 0.5, popup = districtinfo, # 10\rgroup = \u0026quot;Lower\u0026quot;) %\u0026gt;% # 11\raddLayersControl(baseGroups = c(\u0026quot;base\u0026quot;), overlayGroups = c(\u0026quot;Lower\u0026quot;)) # 12\rGoing line by line:\nDefine the text that we want to appear in the information when users click an area of the map\rDefine a vector of colors with length equal to the number of districts\rSince our code in line 2 would have similar colors next to each other, I want to shuffle the colors\rto make it look better (more info here)\rCreate a dataframe with color information and an id for each district.\rLeaflet conveniently allows for piping. To start the map generation, lets limit users to only be able to zoom out so far.\rThis provides a base map where we will lay our other shapes on top of. We can label this so we can refer to\rit later (in line 12).\rThis sets the initial view, centered on a latitude and longitude point with a certain initial zoom\rTo restrict the user from venturing too far from your area of interest you can restrict the frame of the map.\rTo see this, try to pull the map in any direction, you can’t get too far until it bounces you back to a relevant frame.\rHere is where we layer our district shapefile on top of that base map we established in line 6.\rLeaflet recognizes the Spatial Polygon Dataframe as such and knows how to handle it. The color option sets the\rcolor of the border of the districts and the weight is how thick these borders are.\rContinuing with the district shapefile options. To fill the shapes with different colors,\rwe use the colors we generated in lines 2-4. The fillOpacity command allows you to adjust\rhow much you can see through the shape. Notice how you can still make out information on\rthe base map? That’s because we set this option to less than 1. The popup option is telling\rleaflet we want to see districtinfo for the area we are clicking on in the map.\rWe can label this layer as “Lower”, this allows us to refer to it in the layers control below.\rLastly, this layer control allows us to tell leaflet that we want the “base” to always be\rvisible on the map, but we can add/remove “Lower”. To see this in the map below click the icon\rin the upper right corner. Notice how we can uncheck and recheck “Lower”? But we can’t do that\rwith the base map.\r\r\r{\"x\":{\"url\":\"/post/2020-05-01-mapping-with-leaflet_files/figure-html//widgets/widget_unnamed-chunk-6.html\",\"options\":{\"xdomain\":\"*\",\"allowfullscreen\":false,\"lazyload\":false}},\"evals\":[],\"jsHooks\":[]}\rWe can then add an additional layer to this map with the upper house as well.\ndistrictinfo \u0026lt;- paste0(\u0026quot;Lower District: \u0026quot;, substr(WiscoCdLower$GEOID,3,5), # 1\r\u0026quot; \u0026lt;br\u0026gt; \u0026quot;, \u0026quot;Upper District: \u0026quot;, substr(WiscoCdUpper$GEOID,3,5)) # 2\rloweranduppermap\u0026lt;-leaflet(options = leafletOptions(minZoom = 4)) %\u0026gt;% # 3\raddProviderTiles(\u0026quot;CartoDB.Positron\u0026quot;, group = \u0026quot;base\u0026quot;) %\u0026gt;% # 4\rsetView(centerLNG, centerLAT, zoom = 6) %\u0026gt;% # 5\rsetMaxBounds(-94, 41, -85, 48) %\u0026gt;% # 6\raddPolygons(data = WiscoCdLower, color = \u0026quot;white\u0026quot;, weight = 2, # 7\rfillColor = ~pal(GEOID), fillOpacity = 0.5, # 8\rpopup = districtinfo, group = \u0026quot;Lower\u0026quot;) %\u0026gt;% # 9\raddPolygons(data = WiscoCdUpper, weight =2, opacity = 1, # 10\rcolor = \u0026quot;black\u0026quot;, fill = FALSE, group = \u0026quot;Upper\u0026quot;) %\u0026gt;% # 11\raddLayersControl(baseGroups = c(\u0026quot;base\u0026quot;), # 12\roverlayGroups = c(\u0026quot;Upper\u0026quot;, \u0026quot;Lower\u0026quot;)) # 13\rThere are only a few changes we needed to make. In line 1 and 2 we define our pop up\rto show information on both the lower and upper legislative districts. In lines 10 and 11\rwe add in the upper house as an additional layer. Setting fill to false we can just have the\rboundary of the upper legislative districts, this will allow us to see through to the lower\rlegislative district layer. And lastly in line 12 and 13 we add our upper legislative districts\rinto the map. Notice if you open the layer control in the map below (upper right corner), you\rcan now check/uncheck both the lower and the upper legislative districts.\n\r{\"x\":{\"url\":\"/post/2020-05-01-mapping-with-leaflet_files/figure-html//widgets/widget_unnamed-chunk-8.html\",\"options\":{\"xdomain\":\"*\",\"allowfullscreen\":false,\"lazyload\":false}},\"evals\":[],\"jsHooks\":[]}\r","date":1588291200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1588459157,"objectID":"3241e7b60360fbcdad28215cacd4ea59","permalink":"/post/mapping-with-leaflet/","publishdate":"2020-05-01T00:00:00Z","relpermalink":"/post/mapping-with-leaflet/","section":"post","summary":"This post assumes a basic knowledge of R.\nUsing leaflet we can map shapefiles and specific points. As an illustrative example I will be using code I wrote earlier this year when I was\rlooking into some political economy questions regarding schools and state government.","tags":[],"title":"Mapping with Leaflet","type":"post"},{"authors":["Joseph Westenberg","David Schaffer"],"categories":null,"content":"","date":1559347200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1559347200,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"/publication/journal-article/","publishdate":"2019-06-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Paid jobs providing more time flexibility may appeal to workers who have primary responsibility as a caregiver for young children or for sick, handicapped, or elderly adults. However, in some jobs, workers who are given this flexibility may be less productive per hour than workers who commit to a fixed work schedule chosen by the employer. These two realities may lead employers to offer, and caregivers to accept, lower paying jobs that come with more time flexibility. Since caregivers in the United States are disproportionally women, this may help to explain the lingering gender wage gap in the U.S. Data sets were combined from the 2015 revision of the Occupational Information Network (O*NET) and the 2003 through 2015 March Current Population Surveys to analyze this issue. The combined data set includes extensive information on workers’ average hourly earnings and personal characteristics along with 407 characteristics of their occupations. Log wage regressions were used to show that the data are not consistent with the Time Flexibility Hypothesis when applied to occupation categories.","tags":["Publication","Labor Economics"],"title":"Time Flexibility, Women’s Wages, and the Gender Wage Gap","type":"publication"}]